/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'org.testng:testng:6.14.3'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.1-jre'
    
    // https://mvnrepository.com/artifact/org.testng/testng
	testImplementation 'org.testng:testng:6.14.3'
	
	// https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-plugin
	implementation 'org.apache.maven.plugins:maven-surefire-plugin:2.22.2'
		
	// https://mvnrepository.com/artifact/io.appium/java-client
	implementation group: 'io.appium', name: 'java-client', version: '8.3.0'

	// https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
	implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.0'
	
	// https://mvnrepository.com/artifact/com.aventstack/extentreports
	implementation group: 'com.aventstack', name: 'extentreports', version: '5.0.9'
	
	// https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
	implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.18.0'
	
	// https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api
	implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.18.0'
	
	// https://mvnrepository.com/artifact/commons-codec/commons-codec
	implementation group: 'commons-codec', name: 'commons-codec', version: '1.15'
	
	// https://mvnrepository.com/artifact/com.diffplug.spotless/spotless-maven-plugin
	implementation group: 'com.diffplug.spotless', name: 'spotless-maven-plugin', version: '2.37.0'	
    
}

test {
	useTestNG() //Tells Surefire to use TestNG
	//suites 'com.insurance.poc/testsuiteXML/testng.xml'  //Path to your TestNG XML file, if using one
	suiteXmlFiles = fileTree(dir: 'com.insurance.poc/testsuiteXML' , include: 'testng.xml')
	
	testLogging {
		events 'passed', 'skipped', 'failed' //Customize test log output
	}
	//Configure Surefire for parallel execution
	/**systemProperty 'surefire.testng.threadCount', '5' //Number of threads to use for parallel execution
	systemProperty 'surefire.testng.parallel', 'methods' //Parallel mode ('methods', 'classes', 'both', 'none')
	systemProperty 'surefire.testng.useUnlimitedThreads', 'true' //Allow unlimited threads (recommended for parallel)**/
	
	// Surefire parallel execution settings
	maxParallelForks = Runtime.runtime.availableProcessors() // Use the number of available processors as the default thread count
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {				
        languageVersion = JavaLanguageVersion.of(18)
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}